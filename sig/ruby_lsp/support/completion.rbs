module RubyLsp
  module Support
    class Completion
      @response_builder: untyped

      @node_context: RubyLsp::NodeContext

      @index: RubyLsp::Support::Decorators::IndexDecorator

      def initialize: (untyped response_builder, RubyLsp::NodeContext node_context, untyped global_state, untyped dispatcher) -> void

      def on_call_node_enter: (Prism::CallNode node) -> void

      private

      def block_parameters: (RubyLsp::NodeContext) -> ((Array[Prism::RequiredParameterNode | Prism::MultiTargetNode]) | [])

      # Gets the first parameter of the block
      #
      # Example:
      # ```
      # define_handle_for(Abc) do |event|
      # end
      # ```
      # The value will be `event`
      #
      # From the existing pattern, we assume that the block contains a single parameter
      def first_block_param: (RubyLsp::NodeContext) -> (Prism::RequiredParameterNode | nil)
      def method_argument: (RubyLsp::NodeContext) -> String
      def infer_type: (RubyLsp::NodeContext, RubyLsp::Support::Decorators::IndexDecorator) -> (RubyLsp::TypeInferrer::GuessedType | nil)
    end
  end
end
